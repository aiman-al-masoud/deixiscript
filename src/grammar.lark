?start: prog
prog: _ast | (prog "." _ast) "."?

_ast: 
    | _expression 
    | defin 
    | _potential 
    | order 
    | repeat 
    | question
    | existential_quantifier

question: _ast "?"
existential_quantifier: "there" "is" _noun

_expression:  
    | _noun 
    | compare_exp 
    | logic_exp 
    | math_exp  
    | idea

_noun: 
    | genitive 
    | attributive 
    | implicit_phrase 
    | PRONOUN 
    | VARIABLE 
    | BOOL 
    | NOUN 
    | STRING 
    | NUMBER 
    | _parens

_parens: "(" _expression ")"
implicit_phrase: _ARTICLE _noun
genitive: _noun "'s" NOUN
attributive: (NEGATION "-")? NOUN _noun
_event: _noun VERB _noun?
_fact: _noun _COPULA NOUN _noun?
idea:_event | _fact

_potential: potential_core | potential_with_duration | potential_with_precondition
potential_core: _noun "can" VERB _noun?
potential_with_duration: _potential ","? "(" "duration"? ":"? NUMBER _TIME_UNIT ")"
potential_with_precondition: _potential ","? (_IF _expression)
_TIME_UNIT: "seconds" | "s"

defin: idea ","? "means" ":"? _expression
order: _noun "should" "ensure"? _expression
repeat: idea NUMBER "times"
?compare_exp: logic_exp | (logic_exp COMPAREOP compare_exp)
?logic_exp: _expression | (_expression LOGICOP logic_exp)
?math_exp: _noun | (_noun MATHOP math_exp)
// TODO: split eq/neq from compare and increase priority of compare w/ resp to logic

_ARTICLE: "a" | "an" | "the"
MATHOP: "+" | "-" | "*" | "/"
LOGICOP: "and" | "or" | ","
COMPAREOP: "=" | "<=" | ">=" | "!=" | ">" | "<"
VARIABLE: "x" | "y" | "z"
PRONOUN: "it" | "he" | "she"
NOUN: "player" | "enemy" | "location" | "life" | "x-coord" | "human" | "health" | "door" | "ok" | "state" | "right" | "left" | "y-coord" | "up" | "down" | "color" | "red" | "green" | "near" | "dead"
VERB: "hit" | "die" | "hits" | "dies" | "move" | "moves" | "increment" | "increments" | "decrement" |  "decrements" | "open" | "change" | "opens" | "go" | "goes"  | "heal"
_COPULA: "be" | "is" | "are"
BOOL: "true" | "false"
NEGATION: "non"
_IF: "if"

%import common.WS
%import common.ESCAPED_STRING -> STRING
%import common.NUMBER
%ignore WS